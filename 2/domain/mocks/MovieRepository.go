// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import context "context"
import domain "github.com/bxcodec/go-clean-arch/domain"
import mock "github.com/stretchr/testify/mock"

// MovieRepository is an autogenerated mock type for the MovieRepository type
type MovieRepository struct {
	mock.Mock
}

// GetByID ...
func (_m *MovieRepository) GetByID(ctx context.Context, ImdbID string) (domain.Movie, error) {
	ret := _m.Called(ctx, ImdbID)

	var r0 domain.Movie
	if rf, ok := ret.Get(0).(func(context.Context, string) domain.Movie); ok {
		r0 = rf(ctx, ImdbID)
	} else {
		r0 = ret.Get(0).(domain.Movie)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, ImdbID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Search ...
func (_m *MovieRepository) Search(
	ctx context.Context,
	pagination int64,
	searchword string,
) (domain.Movies, error) {
	ret := _m.Called(ctx, pagination, searchword)

	var r0 domain.Movies
	if rf, ok := ret.Get(0).(func(context.Context, int64, string) domain.Movies); ok {
		r0 = rf(ctx, pagination, searchword)
	} else {
		r0 = ret.Get(0).(domain.Movies)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int64, string) error); ok {
		r1 = rf(ctx, pagination, searchword)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
